name: Go Test and Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  # Set CI environment variable to true
  CI: true
  
jobs:
  test:
    name: Test and Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['1.18', '1.19', '1.20']
    
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
      
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        go mod download
        
        # Install required system packages on Linux
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libbluetooth-dev
        fi
        
        # Install required system packages on macOS
        if [ "$RUNNER_OS" == "macOS" ]; then
          brew install pkg-config
        fi
      
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        
    - name: Run tests
      run: go test -v -timeout 5m ./...
      
    - name: Run tests with race detection
      run: go test -race -v ./...
      
    - name: Run tests with coverage
      run: |
        mkdir -p coverage
        go test -v -coverprofile=coverage/coverage.out ./...
        go tool cover -html=coverage/coverage.out -o coverage/coverage.html
      
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-${{ matrix.os }}-${{ matrix.go-version }}
        path: coverage/
      
    - name: Build binaries
      run: |
        mkdir -p bin
        go build -o bin/govee-server ./cmd/server/govee_server.go
        go build -o bin/govee-client ./cmd/client/govee_client.go
        
    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.os }}-${{ matrix.go-version }}
        path: bin/

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push server image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/server.Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/govee-server:latest
          ghcr.io/${{ github.repository_owner }}/govee-server:${{ github.sha }}
        
    - name: Build and push client image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/client.Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/govee-client:latest
          ghcr.io/${{ github.repository_owner }}/govee-client:${{ github.sha }}
